include "types"

let new_id =
  let «ref, {ref, get, set}» = import "ref"
  let counter = ref 0
  λ().
    let id = get counter
    set counter (id + 1)
    id

let unsafe_cast = target«∀α.α → nothing» "x => x"

type univ = {id: int, value: nothing}

let new = Λα.λ().
  let id = new_id ()
  let to = λx: α.{id, value = unsafe_cast x}
  let of = λx: univ.
    if x.id =«int» id then
      'Some x.value«α»
    else
      'None
  {to, of}

«univ, {new}»
