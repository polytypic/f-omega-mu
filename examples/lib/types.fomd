let type none = [none: ()] in
let type some = λα.[some: α] in

let type opt = λα.[none: (), some: α] in

let type μlist = λα.opt (α, list α) in
let type μlist_of_1 = λα.some (α, none) in
let type μlist_of_1_to_n = λα.some (α, list α) in
let type μlist_of_inf = λα.some (α, list_of_inf α) in

let type alt = λα.λβ.[in1: α, in2: β] in

let type iso = λα.λβ.(α → β, β → α) in

let type any = ∃α.α in
let type nothing = ∀α.α
