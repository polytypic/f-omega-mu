#!/bin/bash

# shellcheck source=common
. "${BASH_SOURCE%/*}/common"

export TIMEFORMAT="CPU: %Us, Real: %Es"

folded() {
  echo
  echo "JOB: $1"
  shift
  time "$@"
}

folded "Building docs" \
  script/docs

foms=(examples/*.fom regression/*.fom)

type_examples() {
  for fom in "${foms[@]}"; do
    read -r code
    echo "$code" > "${fom%.fom}.fomi"
  done < <($FOM_COMMAND -max-width 0 -stop type "${foms[@]}")
}

eval_examples() {
  for fom in "${foms[@]}"; do
    read -r code
    echo "$code" > "${fom%.fom}.out"
  done < <($FOM_COMMAND -max-width 0 -stop eval "${foms[@]}")
}

js_examples() {
  for fom in "${foms[@]}"; do
    read -r code
    echo "$code" > "${fom%.fom}.js"
  done < <($FOM_COMMAND -max-width 0 -stop js "${foms[@]}")

  prettier -w examples/*.js regression/*.js > /dev/null
}

js_and_eval_examples() {
  js_examples &
  eval_examples &
  wait
}

error_foms=(examples/errors/*.fom)

run_error_examples() {
  for fom in "${error_foms[@]}"; do
    out="${fom%.fom}.out"
    if $FOM_COMMAND "$fom" | sed -e "s#$(pwd)##g" > "$out"; then
      echo "$fom unexpectedly ran successfully"
      exit 1
    fi
  done
}

build_and_test() {
  OPTS=(--root=.)

  if [ -n "$PROFILE" ]; then
     OPTS+=(--profile "$PROFILE")
  fi

  folded "Building" \
    opam exec -- dune build "${OPTS[@]}"

  folded "Testing" \
    opam exec -- dune test "${OPTS[@]}"

  folded "Typing examples" \
    type_examples

  folded "Running error examples" \
    run_error_examples

  folded "Compiling and Evaluating examples" \
    js_and_eval_examples
}

if [ "$CI" = true ]; then
  PROFILE='' build_and_test
  folded "Cleaning" \
    opam exec -- dune clean
fi

PROFILE=release build_and_test

if [ "$CI" = true ]; then
  if [[ $(git status --porcelain) ]] ; then
    git status
    git diff
    exit 1
  fi
fi
